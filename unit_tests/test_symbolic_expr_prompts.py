"""Prompts to evaluate Language Models."""
prompt1_dict =   {
    "key": "<function sthoppay_math_expression1 at 0x7fb98049d7e0>_47",
    "prompt": "The given input/output pairs are generated using an algebric function. \nAlthough the exact algebric function is not known. The function is constructed with the \nfollowing symbols:\n\n  Trigonometric expressions such as Sine, Consine, Tangent. \n\n  Logarithmic expression with natural and base 10. \n\n  Expontential functions. \n\n  Polynomial functions upto the order of two. \n\n  Simple algebric operations such as addition, substraction, multiplication and division. \n\n  \nThe input variable can vary between -1.0 to +1.0 to include all real numbers. \n\n\nFor the given input/output pairs [(0.13774872601381571, 1.1466102817387653), (-0.9679853819339987, 0.5359754901868433), (-0.7843907779653752, 0.5395019237554328), (-0.9426115282126473, 0.5336083993182574), (0.25872877546596995, 1.2866590330680594), (0.4892513582952731, 1.5485242953997869), (-0.8816601526544516, 0.5317243894081142), (-0.850443811239187, 0.5328031664969789), (0.07759473462586253, 1.080509315984388), (0.1311915284577232, 1.1392653506636035), (0.8938981388355896, 1.6189263848720512), (0.417081876125204, 1.4714991553807741), (0.46522335197013676, 1.52380130142173), (0.8050475444121663, 1.686164505370423), (0.3441758298747215, 1.3876595855779197), (-0.7153404133575769, 0.5526458235665646), (-0.8644022379459961, 0.532152142721786), (0.2383653282954934, 1.262640525245795), (0.04007685923333271, 1.0408679745649967), (0.2205088764181482, 1.2416820577679497), (0.6794116045982559, 1.686998088221432), (-0.2695558411979999, 0.7682635209261338), (0.07791331243929278, 1.0808513976711733), (-0.14108256446532397, 0.869182426598534), (0.2814418426395102, 1.3135397362252887), (0.9226832141721963, 1.5831027309538999), (-0.6087007338414312, 0.5844532012251424), (0.3445898947746344, 1.3881454344776092), (0.0702962367969564, 1.0726970712019792), (0.8965350023694514, 1.6159452764911575), (-0.4661927770701917, 0.6469896610136296), (-0.3366995246676896, 0.7223691676839992), (-0.024897410416847343, 0.9754149309020873), (0.20510266454702375, 1.2237008048904046), (0.1771881137790905, 1.1914177600321103), (-0.41559570279003344, 0.6743808521254127), (-0.1928280959054427, 0.8264484468542302), (0.49481075846814826, 1.5540868475686807), (-0.2697629915869111, 0.768114749856838), (-0.7235363230647771, 0.5507690210784651), (-0.11246801300321785, 0.8940288583055023), (-0.7812144647011985, 0.5399714427993307), (0.6032118407320122, 1.6467472803764394), (0.27380911778442973, 1.3044999309642427), (0.07706803138393337, 1.0799439508381217), (-0.7656485282833687, 0.5424634768432699), (-0.7802835121731153, 0.5401115700307377), (0.6360040352626866, 1.6671355631752327), (-0.5536054272820148, 0.6060157430526607), (0.22954740983749322, 1.2522766393114941), (-0.9014514004295691, 0.5317524232913852), (0.8657847254491378, 1.647049516351094), (0.6079686218887723, 1.6499650691715524), (-0.6181034102088137, 0.5811134399881406), (0.13262426694689777, 1.1408674804152867), (-0.7730498183111205, 0.5412391092810471), (-0.3770273786243459, 0.6970390582943695), (0.619153938592981, 1.6571918469703015), (0.31522013951148, 1.3535372465309075), (-0.3387734145761532, 0.7210257114604671), (0.5342645204115442, 1.5915866190338939), (-0.47584924787873195, 0.6420652167942857), (0.8625693728408204, 1.6498474219581643), (0.40859869417156336, 1.4619760912891626), (0.5677548463013058, 1.620245353147741), (0.3659256617147424, 1.4130668771962505), (0.021213326879530037, 1.0214366435420315), (0.6699043309864687, 1.6834039440312858), (-0.20332221049375, 0.8181262868770123), (0.0042285128990289245, 1.0042374403113055), (0.2500845520256889, 1.2764507041476865), (0.006052168857096252, 1.0060704456648775), (0.7072209685360815, 1.6948591692555244), (-0.8480957215768934, 0.5329392948524698), (0.24739997797728974, 1.2732838819589751), (-0.27246726120579545, 0.7661766895944603), (-0.9617835379713082, 0.535310326999361), (0.15374153245388222, 1.1646543448988709), (-0.9954256363125678, 0.5395924107620264), (0.607423545567551, 1.6496006437089834), (0.19634209531604374, 1.213524990627866), (0.7858034548884381, 1.6928238138029013), (-0.8422650094623279, 0.5333103055197532), (0.624788940515381, 1.660646361742847), (0.32473884114513196, 1.364781360223775), (-0.11226792751755599, 0.894205642356912), (-0.8560095298058812, 0.5325110562433958), (-0.38891288592885687, 0.6898931117182822), (-0.5072089106576811, 0.626750046672462), (0.816366275655287, 1.6810060732841232), (-0.9204867673950963, 0.5323072621056447), (-0.0036014495448823958, 0.9964050433831178), (0.28257925725748634, 1.314887145092235), (-0.9902280935936401, 0.5388228888932602), (0.9642903940220673, 1.518176349486411), (0.14868251043740988, 1.1589270249795858), (0.8350983506077145, 1.6703710831333565), (-0.4600711129239292, 0.6501620319329224), (-0.8999726861217032, 0.5317310526357464), (-0.6912862780061093, 0.5586332767894004)], answer the following question: What is the standard deviation of the output values?\n\n",
    "hint": "Is it possible that the input/output pairs is generated by Trigonomtric and polynomial",
    "human_hint": "The actual function that were used is: \n\ndef sthoppay_math_expression1(x: float):\n  \"\"\"Math expression with poly and trignometric primitives.\"\"\"\n  return math.cos(x) + math.sin(x + math.pow(x, 2))\n \n\n and uses the symbols: \nAdd, Cosine, Sine, Polynomial",
    "user_query": "What is the standard deviation of the output values?\n"
  }

prompt2_dict =   {
    "key": "<function sthoppay_math_expression3 at 0x7fb98049d900>_301",
    "prompt": "The given input/output pairs are generated using an algebric function. \nAlthough the exact algebric function is not known. The function is constructed with the \nfollowing symbols:\n\n  Trigonometric expressions such as Sine, Consine, Tangent. \n\n  Logarithmic expression with natural and base 10. \n\n  Expontential functions. \n\n  Polynomial functions upto the order of two. \n\n  Simple algebric operations such as addition, substraction, multiplication and division. \n\n  \nThe input variable can vary between -1.0 to +1.0 to include all real numbers. \n\n\nFor the given input/output pairs [(-0.3048499093281618, -0.2862863747218392), (-0.18258794719158433, -0.17855467697986746), (-0.49448264324068947, -0.41755488008738917), (0.0025855897095177216, 0.0025855781859478216), (0.7751840179522969, 0.5012795491254822), (0.34927092369253887, 0.3215060343627256), (0.19494897346281603, 0.19004409491467794), (-0.3378363980206429, -0.3126725193121059), (0.8058613015637839, 0.5019888763983728), (0.08629103555915019, 0.08586326365071874), (0.7743538947235498, 0.5012397010250388), (0.01669412693241612, 0.016691025390290895), (-0.2923113251531404, -0.2759223254236675), (0.020569422842597218, 0.020563621328268177), (0.0390363735132937, 0.03899672784171099), (-0.921455651293724, -0.4956557846763762), (-0.2603663366910738, -0.2487462431944045), (0.7241494343852053, 0.4966587388756287), (0.21223723184960863, 0.20591657064396113), (0.3895074424050482, 0.3512177589787001), (-0.7537775124364325, -0.4998861874941279), (-0.3738857045927704, -0.33994297091971487), (-0.09950082103687263, -0.0988452808867556), (-0.991117690885502, -0.5109069899204796), (-0.7420020812780312, -0.4987875376273538), (-0.633701246441241, -0.47697720797795007), (-0.39691981867883697, -0.3564478294302811), (-0.22464005714037327, -0.21715281904064285), (-0.8323468245442562, -0.5014995808136209), (-0.8649654007248371, -0.49976463499865065), (-0.41876470686128253, -0.3713997346945524), (0.34130486645001734, 0.3153695751914522), (0.07059389040982822, 0.07035956844109856), (-0.5261690740567617, -0.43408606704328323), (0.6555663968623777, 0.48311614593870833), (0.7077588017214238, 0.49420317239576705), (-0.24446117544344648, -0.2348287246188087), (0.21142004705808315, 0.20517171309189877), (0.08588826722059939, 0.08546645197200711), (-0.12523633089576958, -0.12393061694307651), (-0.9528682355761344, -0.49540534260908053), (-0.44130491675593153, -0.3860818103667625), (-0.628924423711356, -0.4755184258495156), (-0.04238107644402045, -0.04233034448400189), (0.23766144403959943, 0.22880521117131622), (0.009093509505526676, 0.009093008206649116), (-0.07882576431431731, -0.07849961375088434), (0.06198663265403903, 0.061827961942115976), (0.8476966609380194, 0.5008157035963411), (-0.7977835943332177, -0.5019423020579786), (-0.04366986084700275, -0.04361435965876686), (0.6734878514282998, 0.48748846851149447), (0.7938154593468216, 0.5018835992587446), (0.04886787721607244, 0.048790111360205855), (-0.7774167918292942, -0.5013811615468277), (-0.8656612677931506, -0.4997171577384098), (0.1905974975369582, 0.18601236309852862), (0.34156645161796106, 0.31557236571785596), (-0.09633600912390428, -0.09574098476511052), (0.9555060602056742, 0.4956088934340819), (-0.43789525155292974, -0.38391063293237243), (-0.876749470997803, -0.49891982775242266), (-0.8803148635699352, -0.4986503066314175), (-0.8689035738681568, -0.4994915822052062), (0.7512567623619617, 0.4996711435182986), (-0.9444802838803021, -0.49506790117637756), (0.15300765312122855, 0.1506298404210813), (0.9019020174240875, 0.4969783484839647), (0.5282907709042577, 0.43513160626772934), (-0.7697247906525353, -0.5009967775781606), (0.7848935481508508, 0.5016629344064273), (-0.865963602629839, -0.4996964239949637), (-0.05636347312292189, -0.05624417079465781), (-0.15000410247549523, -0.14776321238710205), (-0.3796236404626532, -0.3441235488257911), (-0.39514659700002297, -0.3552037807853514), (0.18024941467804756, 0.1763685292295661), (-0.8795892672340961, -0.49870555245913223), (-0.9142458696426847, -0.4960952284011315), (-0.06532351347165677, -0.06513782823376219), (-0.555064355184153, -0.4476496579043856), (-0.2089931993615628, -0.20295643065870256), (0.26372489530129894, 0.25165328085048866), (-0.49606843158613523, -0.4184225626956136), (0.3681134514745943, 0.33569204318057766), (0.47092955309137263, 0.4041779439390961), (0.7720808651238054, 0.501124820051844), (0.3552737994268227, 0.3260761585003338), (-0.3280195814661331, -0.3049575953323248), (0.9662962482187849, 0.49713082085343036), (0.7914469643197175, 0.5018370840038453), (-0.8103534336703166, -0.5019735229166764), (-0.8530732509526939, -0.5005170537409067), (-0.9873817158467428, -0.5068581309546225), (-0.8281849347926269, -0.5016375789707055), (0.6090848023199849, 0.4690096149353667), (0.9075156454918683, 0.49656189097616193), (0.7699879927833764, 0.5010115359430695), (0.5909743396829004, 0.4624377955200013), (0.9468280406760345, 0.4951207932628668)], answer the following question: What is the average (mean) of the input and output value?\n\n",
    "hint": "Is it possible that the input/output pairs is generated by Trigonomtric and polynomial",
    "human_hint": "The actual function that were used is: \n\ndef sthoppay_math_expression3(x: float):\n  \"\"\"Math expression with trignometric primitive.\"\"\"\n  return x * math.asin(x) / math.tan(x) * math.cos(x)\n \n\n and uses the symbols: \nMultiply, Divide, ArcSine, Tangent, Cosine",
    "user_query": "What is the average (mean) of the input and output value?\n"
  }

prompt3_dict =   {
    "key": "<function nguyen1_poly_expression2 at 0x7fb98049d5a0>_504",
    "prompt": "The given input/output pairs are generated using an algebric function. \nAlthough the exact algebric function is not known. The function is constructed with the \nfollowing symbols:\n\n  Trigonometric expressions such as Sine, Consine, Tangent. \n\n  Logarithmic expression with natural and base 10. \n\n  Expontential functions. \n\n  Polynomial functions upto the order of two. \n\n  Simple algebric operations such as addition, substraction, multiplication and division. \n\n  \nThe input variable can vary between -1.0 to +1.0 to include all real numbers. \n\n\nFor the given input/output pairs [(-3.364428781768587, 98.00008777261473), (5.157456947127184, 876.4679516744912), (-9.062659192023316, 6074.367892538199), (0.2601478734021896, 0.35001096018707306), (4.984786040459737, 771.1229689294107), (2.300815980948933, 47.79835767063775), (6.221222801011493, 1783.6783065651023), (-4.783670648305735, 432.2874788413994), (6.054993251058022, 1608.8832198328614), (9.243744024713514, 8185.69517228054), (7.394250159996901, 3455.6978997525935), (1.5063788562839253, 12.342962189764217), (3.032074181421006, 124.62080397278291), (8.750917212394473, 6619.736673904435), (5.113058210061556, 848.4044605388384), (0.6883303985117415, 1.7127444535064869), (1.1125445835974546, 5.259396711575365), (-9.899014817859609, 8720.219109566813), (4.896645431050326, 721.1843913474484), (-3.4292612945688017, 106.29670431319805), (-7.668388105814435, 3058.133674809043), (-3.7193496817033767, 150.02979687143068), (7.930551629028578, 4525.216634649893), (4.619982897540321, 580.150923176035), (4.531160449981563, 539.6327140762576), (5.75622684590803, 1327.4897743667968), (5.322018048605608, 986.6280318972156), (3.6341464009828517, 239.26278986223957), (1.3479282396170067, 8.915067710661283), (-3.7172754317028804, 149.67594144516164), (6.660036513144291, 2313.8916744412263), (4.590578287026419, 566.4916884021715), (-6.53450987373104, 1580.4174860489807), (1.7063192941459242, 18.062817953714614), (1.2761642515714637, 7.635436734894197), (9.642006067072767, 9642.112288111632), (0.48418189705456527, 0.8870802039011494), (6.842039156967886, 2565.4591037734917), (4.03157907794321, 349.9934867122056), (-8.02790985954083, 3692.5012264221996), (-7.417695968403524, 2666.910442612848), (2.7129253723236744, 84.2089939257736), (-5.9517907999576085, 1073.4834732168838), (-8.9553181974974, 5784.721206256783), (2.6960205351742275, 82.39212534298842), (2.274575771223166, 45.98335118848972), (-1.3822853538453561, 1.5381005295206132), (-1.0154670019202694, 0.031902074090944366), (-2.1767063598579224, 14.697122663448878), (-1.2554309504125154, 0.8260954431245011), (3.460404280018528, 200.25726161549812), (4.490876054403294, 521.9776097629122), (8.994670242706214, 7363.076626564184), (-4.524228347500401, 342.3049138554585), (-3.4865140944993094, 114.05096660647409), (-8.576331979712489, 4844.271141648648), (8.351046207418491, 5524.156554323468), (5.421023221492639, 1057.7435278930707), (7.604826069411018, 3849.9507877798496), (-6.243554844126866, 1308.9468483150567), (-0.17918044620749285, -0.1517967438006398), (-4.371311948315498, 296.3381515327962), (6.272850519799309, 1840.7662702016457), (-6.528751061939291, 1574.6662085609348), (-7.537112097472107, 2848.2577808840792), (-6.230092717115188, 1297.2996855510416), (-0.5651132532849843, -0.3242445392206637), (5.527761717234181, 1138.6693038502133), (4.8466210895687905, 693.9499035779356), (-3.232759244847605, 82.65107785932449), (-1.8417448464100499, 6.808863720360533), (-7.761131902898737, 3213.2564631415676), (-1.5672541280971117, 3.0727462486063732), (3.614769182934161, 234.64880240056561), (-2.9589911696631592, 56.549844109894494), (0.9483051507691336, 3.5090914879816433), (-5.337370875420491, 682.64089914022), (3.989777269627833, 336.8116582025922), (-9.658062330366002, 7883.550366449613), (5.471844568634182, 1095.7143300654159), (2.838323099926871, 98.66054651482366), (-6.535492777362959, 1581.4006773596486), (7.91453926485023, 4490.081723377962), (6.289210227817531, 1859.1398281738648), (6.674772170104749, 2333.5383988536983), (0.9458771369928964, 3.48728008737192), (0.620179189720302, 1.3912703761773022), (-8.99736657352996, 5896.919272226538), (8.473902707733458, 5845.015832145122), (0.8910026234903228, 3.0224969828687325), (9.70515377574462, 9889.78164110782), (-2.7399527290397874, 40.55779713459145), (-6.649189686167231, 1698.266891312841), (-1.3548367300637114, 1.3631945081719348), (7.000069142652979, 2800.1060663403828), (0.12687180010250643, 0.14526953563549497), (-8.125146264347414, 3879.8634986238285), (-0.9210112545735996, -0.13446016027859664), (7.66535779358335, 3969.290435597806), (2.3016166376931544, 47.85459137745639)], answer the following question: Are there any significant outliers in the output value?\n\n",
    "hint": "Is it possible that the input/output pairs is generated by polynomial",
    "human_hint": "The actual function that were used is: \n\ndef nguyen1_poly_expression2(x: float):\n  \"\"\"Simple nguyen expression for polynomial - expression2.\"\"\"\n  return math.pow(x, 4) + math.pow(x, 3) + math.pow(x, 2) + math.pow(x, 1)\n \n\n and uses the symbols: \nAdd, Polynomial",
    "user_query": "Are there any significant outliers in the output value?\n"
  }